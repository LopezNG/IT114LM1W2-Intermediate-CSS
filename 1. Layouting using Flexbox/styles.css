.container {
    max-width: 1200px;
    margin: auto auto;
}

.box {
    width: 50px;
    height: 50px;
    margin: 5px;
    background-color: #f2f2f2;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
}

.box.tall {
    height: 100px;
}

.box.wide {
    width: 100px;
}


.red{
    background-color: red;
}

.blue{
    background-color: blue;
}

.green{
    background-color: green;
}


/* TODO 1 */
.todo-1-container {
    /* TODO 1.1.1 Set the display of this div to flex*/
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    /* TODO 1.1.2 Set the flex direction to row. Then set it to column. What's the difference?*/
    /* Answer: If the flex direction is set to row the display is horizontal and if the flex direction is set to column it's vertical*/
    /* TODO 1.1.3 Set the flex direction to row. Then enable flex wrap. What does wrap do? */
    /* Answer: The flex wrap just creates new row if the parent is too small.*/
    /* Todo 1.1.4 Set the gap of the container to 10px. Now change it to 20px. What does gap do? */
    /* Answer:  Gap is the gap between flext items.*/

}

/* TODO 2 */
.todo-2-container{
    /* TODO 1.2.1 Set the display to flex and flex direction to row */
    display: flex;
    flex-direction: row;
    /* TODO 1.2.2 Justify the content to start, then end, then center. Make sure to see how the position of the divs change*/
    justify-content: start;
    justify-content: end;
    justify-content: center;
    /* TODO 1.2.3 Align the items start, then end, then center. Make sure to see how the position of the divs change*/
    align-items: start;
    align-items: end;
    align-items: center;
    /* TODO 1.2.4 Set the flex direction to column and play around with justify-content and align-items */
    flex-direction: column;
    justify-content: center;
    align-items: end;
}

/* TODO 3 */
.todo-3-container{
    /* Todo 1.3.1 Set the display to flex and align items center */
    display: flex;
    align-items: center;
}

/* Select the red box */
.todo-3-container .box.red{
    /* Todo 1.3.2 Align this item to start. Try out the other possible values. What happens? */
    align-items: start;
    align-items: end;
    align-self: self-start;
    /* Answer: Selecting a div is much more precise and the only thing that move is the text inside the red box*/
}

/* Select the green box */
.todo-3-container .box.green{
    /* Todo 1.3.3 Set flex grow to 1 */
    flex-grow: 1;
}

/* Select the blue box */
.todo-3-container .box.blue{
    /* Todo 1.3.4 Set flex grow to 2. Try out the other values. What happens? */
    flex-grow: 2;
    /* Answer: The boxes grew in size consuming the size of green box by the blue box relative to the flex grow of other items*/
}

/* TODO 4 */
.todo-4-container{
    /* Set the display to flex */
    display: flex;
}

/* Select the red box */
.todo-4-container .box.red{
    /* Set margin left to auto.  */
    margin-left: auto;
    order: 2;
}

/* Select the green box */
.todo-4-container .box.green{
    /* Set margin right to auto */
    margin-right: auto;
    order: 3;
}

/* Select the blue box */
.todo-4-container .box.blue{
    /* Set the order to  1. Try chaging the order of the other divs. What does order do?*/
    order: 1;
    /* Answer: Order just reorganize or realocate the items or the divs.*/
}
